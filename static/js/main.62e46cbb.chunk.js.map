{"version":3,"sources":["App.js","index.js"],"names":["Container","styled","div","Pomodoro","IconPomodoro","ScreenCount","Mensage","Buttons","Start","button","Pause","Reset","App","state","min","sec","modal","handleStart","clearInterval","intervalSec","setInterval","setState","handlePause","handleReset","this","size","color","onClick","type","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"u8EAIA,IAAMA,EAAYC,IAAOC,IAAV,KAQTC,EAAWF,IAAOC,IAAV,KAiBRE,EAAeH,IAAOC,IAAV,KAWZG,EAAcJ,IAAOC,IAAV,KAkBXI,EAAUL,IAAOC,IAAV,KAQPK,EAAUN,IAAOC,IAAV,KAWPM,EAAQP,IAAOQ,OAAV,KAYLC,EAAQT,IAAOQ,OAAV,KAYLE,EAAQV,IAAOQ,OAAV,KAYUG,E,4MACnBC,MAAQ,CACNC,IAAK,GACLC,IAAK,EACLC,OAAO,G,EAGTC,YAAc,WACZC,cAAc,EAAKC,aACnB,EAAKA,YAAcC,aAAY,WACN,IAAnB,EAAKP,MAAME,KAAa,EAAKF,MAAMC,IAAM,GAC3C,EAAKO,SAAS,CACZN,IAAK,GACLD,IAAK,EAAKD,MAAMC,IAAM,IAGtB,EAAKD,MAAME,IAAM,GACnB,EAAKM,SAAS,CACZN,IAAK,EAAKF,MAAME,IAAM,MAGzB,M,EAGLO,YAAc,WACZJ,cAAc,EAAKC,c,EAGrBI,YAAc,WACZ,EAAKF,SAAS,CACZP,IAAK,GACLC,IAAK,IAGPG,cAAc,EAAKC,c,uDAGX,IAAD,EACYK,KAAKX,MAAjBC,EADA,EACAA,IAAKC,EADL,EACKA,IAEZ,OACE,kBAACf,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAUqB,KAAM,IAAKC,MAAM,YAC3B,kBAAC,IAAD,CAAUD,KAAM,IAAKC,MAAM,aAE7B,kBAACrB,EAAD,KACoB,KAAnBmB,KAAKX,MAAMC,KAAiC,IAAnBU,KAAKX,MAAME,IAAY,uCAAqB,8BAAOD,EAAP,IAAaC,GAC/D,IAAnBS,KAAKX,MAAME,KAAgC,IAAnBS,KAAKX,MAAMC,KAAa,kBAACR,EAAD,iCAEjD,kBAACC,EAAD,KACE,kBAACC,EAAD,CACEmB,QAASH,KAAKP,YACdW,KAAK,UAFP,WAKA,kBAAClB,EAAD,CACEiB,QAASH,KAAKF,YACdM,KAAK,UAFP,UAKA,kBAACjB,EAAD,CACEgB,QAASH,KAAKD,YACdK,KAAK,UAFP,gB,GA9DqBC,aC7GjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.62e46cbb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { GiTomato } from 'react-icons/gi';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #7159c1;\n  min-height: 100vh;\n`;\n\nconst Pomodoro = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  width: 100%;\n  height: 60vh;\n  max-width: 600px;\n  background: #fff;\n  border-radius: 5px;\n  box-shadow: 0px 0px 41px -10px rgba(0,0,0,1);\n\n  @media(max-width: 490px) {\n    max-width: 350px;\n  }\n`;\n\nconst IconPomodoro = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 60%;\n  margin: 3% auto 0 auto;\n\n  @media(max-width: 490px) {\n    width: 150px;\n  }\n`;\n\nconst ScreenCount = styled.div`\n  width: 60%;\n  height: 25vh;\n  margin: 2% auto;\n  background: #666;\n  border-radius: 5px;\n  display: flex;\n  color: #fff;\n  flex-wrap: wrap;\n  font-size: 2rem;\n  align-items: center;\n  justify-content: center;\n\n  span {\n    font-size: 3.5rem;\n  }\n`;\n\nconst Mensage = styled.div`\n  font-size: 1.5rem;\n  width: 100%;\n  padding: 0 1rem;\n  text-align: center;\n  color: red;\n`;\n\nconst Buttons = styled.div`\n  width: 63%;\n  margin: 0 auto 5% auto;\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: 490px) {\n    width: 95%;\n  }\n`;\n\nconst Start = styled.button`\n  color: #fff;\n  background: #7159c1;\n  border-radius: 5px;\n  width: 35%;\n  height: 2.3rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  margin: 0 .5rem;\n  cursor: pointer;\n`;\n\nconst Pause = styled.button`\n  color: #fff;\n  background: #7159c1;\n  border-radius: 5px;\n  width: 35%;\n  height: 2.3rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  margin: 0 .5rem;\n  cursor: pointer;\n`;\n\nconst Reset = styled.button`\n  color: #fff;\n  background: #7159c1;\n  border-radius: 5px;\n  width: 35%;\n  height: 2.3rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  margin: 0 .5rem;\n  cursor: pointer;\n`;\n\nexport default class App extends Component {\n  state = {\n    min: 25,\n    sec: 0,\n    modal: false,\n  }\n\n  handleStart = () => {\n    clearInterval(this.intervalSec)\n    this.intervalSec = setInterval(() => {\n      if (this.state.sec === 0 && this.state.min > 0) {\n        this.setState({\n          sec: 59,\n          min: this.state.min - 1,\n        })\n      }\n      if (this.state.sec > 0) {\n        this.setState({\n          sec: this.state.sec - 1,\n        })\n      }\n    }, 1000)\n  }\n\n  handlePause = () => {\n    clearInterval(this.intervalSec)\n  }\n\n  handleReset = () => {\n    this.setState({\n      min: 25,\n      sec: 0,\n    })\n\n    clearInterval(this.intervalSec)\n  }\n  \n  render() {\n    const {min, sec} = this.state;\n\n    return (\n      <Container>\n        <Pomodoro>\n          <IconPomodoro>\n            <GiTomato size={110} color=\"#7159c1\" />\n            <GiTomato size={110} color=\"#7159c1\" />\n          </IconPomodoro>\n          <ScreenCount>\n          {this.state.min === 25 && this.state.sec === 0 ? <span>25:00</span> : <span>{min}:{sec}</span>}\n          {this.state.sec === 0 && this.state.min === 0 && <Mensage>O seu pomodoro terminou</Mensage>}\n          </ScreenCount>\n          <Buttons>\n            <Start\n              onClick={this.handleStart}\n              type=\"button\">\n              Iniciar\n            </Start>\n            <Pause\n              onClick={this.handlePause}\n              type=\"button\">\n              Pausar\n            </Pause>\n            <Reset\n              onClick={this.handleReset}\n              type=\"button\">\n              Parar\n            </Reset>\n          </Buttons>\n        </Pomodoro>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}